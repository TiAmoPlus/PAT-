#include<stdio.h>

int main()
{
	int n;//保存输入的正整数个数
	int K[101] = { 0 };//保存第二行输入的待验证的值
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
	{//遍历输入
		scanf("%d", K+ i);
	}
	int t=0;//用t作为排序的临时变量
	for (int x = 0; x < n - 1; x++) {//运用起泡法 把输入的数 按从小到大排序
		//(原本是想在砍数的过程中排序的 但是在砍数中，如果不存在覆盖的数 那么就不会进行排序 最后输出的时候也就不会排序了)
		for (int y = 0; y < n - 1 - x; y++) {
			if (K[y] > K[y + 1]) {
				t = K[y]; K[y] = K[y + 1]; K[y + 1] = t;
			}
		}
	}
	for(int i=0;i<n;i++){//针对输入的数 进行遍历验证
		if (K[i] != 0) {//后面进行判定的时候 会把不需要验证的数 设置为0 所以不为0的时候 再进行判断
			int t = K[i];//用个临时变量保存当前在验证的数 并对它砍数
			while (t != 1)//这个while 循环用来砍数 并与数组中的数 进行比对 相同的话
			{
				if (t % 2 == 0)
				{
					t = t / 2;
				}
				else {
					t = (3 * t + 1) / 2;
				}
				for (int j = 0; j < n; j++) {
					if (t == K[j]) {//并与数组中的数 进行比对 相同的话 就令数组当前位置上为0
						K[j] = 0;
						break;
					}
				}
			}
		}
	}
	int f = 1;//f 代表first 当前是否是第一个输出的数
	for (int i = n - 1; i >= 0; i--) {//这个for循环 把一个数组从末端输出 与最开始的 排序相对应
		if (K[i] != 0) {
			if (f) {
				printf("%d", K[i]);
				f = 0;//输出完第一个数后 就令f为0 执行else里面代码
			}
			else {
				printf(" %d", K[i]);//多输出个空格
			}
		}
	}
	return 0;
}